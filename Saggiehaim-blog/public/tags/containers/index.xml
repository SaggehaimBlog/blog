<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Containers on Saggie Haim - Automate Everything</title>
    <link>//localhost:8080/tags/containers/</link>
    <description>Recent content in Containers on Saggie Haim - Automate Everything</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>contact@saggiehaim.net (Saggie Haim)</managingEditor>
    <webMaster>contact@saggiehaim.net (Saggie Haim)</webMaster>
    <copyright>Saggie Haim</copyright>
    <lastBuildDate>Sun, 12 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:8080/tags/containers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running Powershell Core in a Container</title>
      <link>//localhost:8080/posts/running-powershell-core-in-a-container/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate><author>contact@saggiehaim.net (Saggie Haim)</author>
      <guid>//localhost:8080/posts/running-powershell-core-in-a-container/</guid>
      <description>With Powershell V7 on the verge, the importance of building solutions that are cross-platforms in Powershell is bigger. One of the issues we have while running tests, is that our Powershell environment is not “clean” as in other computers. That’s where Powershell Core in a container gets in the picture.&#xA;We install a lot of modules, software and other things that our target audience or servers won’t share. Our solution could act differently in those environments.</description>
    </item>
  </channel>
</rss>
